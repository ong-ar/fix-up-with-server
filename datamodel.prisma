type User {
  id: ID! @id
  email: String! @unique
  password: String!
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  invitation: [Invitation!]! @relation(name: "InvitatingRelation")
  reply: [Reply!]!
  chats: [Chat!]!
  someones: [SomeOne!]! @relation(name: "SomeOneUserRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum InvitationStatus {
  REQUEST
  COMPLETE
}

type Invitation {
  id: ID! @id
  user: User @relation(name: "CreateUserRelation")
  invitedEmail: String!
  invitingUser: User! @relation(name: "InvitatingRelation")
  status: InvitationStatus! @default(value: REQUEST)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum SomeOneGender {
  MALE
  FEMALE
}

enum SomeOneCompany {
  LARGE
  MEDIUM
  FOREIGN
}

enum SomeOneStatus {
  REQUEST
  COMPLETE
}

enum SomeOneAccess {
  ALL
  FOLLOW
  NOTHING
}

type SomeOne {
  id: ID! @id
  status: SomeOneStatus! @default(value: REQUEST)
  access: SomeOneAccess! @default(value: ALL)
  user: User! @relation(name: "SomeOneUserRelation")
  gender: SomeOneGender!
  age: Int!
  height: Int!
  company: SomeOneCompany!
  etc: String
  photo: [SomeOnePhoto!]!
  reply: [Reply!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type SomeOnePhoto {
  id: ID! @id
  SomeOne: SomeOne!
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Reply {
  id: ID! @id
  someone: SomeOne!
  writer: User!
  content: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Chat {
  id: ID! @id
  users: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  user: User!
  chat: Chat!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
