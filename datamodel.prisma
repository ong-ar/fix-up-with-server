type User {
  id: ID! @id
  email: String! @unique
  password: String!
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum InvitationStatus {
  REQUEST
  COMPLETE
}

type Invitation {
  id: ID! @id
  invitedEmail: String!
  invitingUser: User!
  status: InvitationStatus! @default(value: REQUEST)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum SomeOneGender {
  MALE
  FEMALE
}

enum SomeOneCompany {
  LARGE
  MEDIUM
  FOREIGN
}

type SomeOne {
  id: ID! @id
  matchMaker: User!
  gender: SomeOneGender!
  age: Int!
  height: Int!
  company: SomeOneCompany!
  etc: String
  photo: [SomeOnePhoto!]! @relation(name: "PhotoRelation")
  reply: [Reply!]! @relation(name: "ReplyRelation")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type SomeOnePhoto {
  id: ID! @id
  SomeOne: SomeOne! @relation(name: "PhotoRelation")
  photo: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Reply {
  id: ID! @id
  someone: SomeOne! @relation(name: "ReplyRelation")
  writer: User!
  content: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}